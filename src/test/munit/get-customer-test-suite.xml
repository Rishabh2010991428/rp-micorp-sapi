<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-customer-test-suite.xml" />
	<munit:test name="get-customer-test-suite-customerSub_FlowTest" doc:id="f5a89dee-1e59-4462-ae1b-1149d4d3e5ac" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="1e34728f-489e-4196-9e2c-6b488d7a6349" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b32b74a4-259c-4e03-922a-6a9fa8fd0cd8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://getCustomerTestSuccess/mock_payload.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="b42f9473-45a8-4002-8492-53d689becde4" >
				<munit:attributes value="#[readUrl('classpath://getCustomerTestSuccess/set_event_attributes.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to customerSub_Flow" doc:id="ed48b8bf-5870-44c2-9fe6-95b47c12871e" name="get:\customer\(email):rp-micorp-sapi-config"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="1416232a-d69c-4b6f-adcd-782fbc7a5e87" is="#[%dw 2.0&#10;import getCustomerTestSuccess::assert_that_payload&#10;---&#10;assert_that_payload::main({payload: payload, attributes: attributes, vars: vars})]" message="assertion failed" expression="#[payload]"/>
		</munit:validation>
	</munit:test>


</mule>
